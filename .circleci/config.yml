version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - add_ssh_keys # this command will add the keys configured in the UI
      - run: |
          # the above step handled our private key, but we still need to trust the *public* key of the bastion host by adding them to known_hosts 
          # you can also use `ssh keyscan IP` to do this dynamically
          echo "18.191.19.150 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEQonlo27Q6jHMBHm7FczYsVbSDMMejUCZmSTcloE2DrDNfL/fzbzNlP5Xk8MxqRfjrPEsrlvRlyNYSxDLVA+0g=" >> ~/.ssh/known_hosts
          echo "ec2-18-191-19-150.us-east-2.compute.amazonaws.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEQonlo27Q6jHMBHm7FczYsVbSDMMejUCZmSTcloE2DrDNfL/fzbzNlP5Xk8MxqRfjrPEsrlvRlyNYSxDLVA+0g=" >> ~/.ssh/known_hosts
      # with private and public keys configured, we can open a LocalForwarding ssh tunnel.
           # ssh -L <local-port>:<target-host>:<target-port> -Nf <user>@<bastion-host>
      - run: ssh -L 9001:104.154.89.105:80 -Nf ubuntu@ec2-18-191-19-150.us-east-2.compute.amazonaws.com || true

      # and simply confirm that accessing local port resolves the target (in this case an HTTP server)
      - run: curl localhost:9001
  